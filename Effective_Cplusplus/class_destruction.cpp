#include <stdafx.h>

//1 析构顺序：
//   类内部：子类析构函数 --> 子类成员变析构 --> 基类析构函数 --> 基类成员变量析构
//   程序：先局部变量->局部静态变量->全局变量->全局静态变量
//   大概的顺序是能确定的，但是每个环节的具体的顺序是不能确定的



//2 虚析构函数
//   存在的目的：如果该类析构函数不是虚函数，那它不能被继承，因为析构的时候只能调用该类而非子类的析构函数
//   A 父类， B 子类；
//   B * pB = new B;
//   A * pA = pB;
//   delete pA;  // 如果不是虚析构函数只调用父类，如果是虚析构函数，先调用子类，再调用父类。  


//3 析构函数的异常不能逃离
class DBConn{
public:
    void close(){         //*** 供客户使用，提供用户自己去处理异常的机会
        db.close();
        closed = true;
    }
    ~DBConn(){         //*** 自身行为，如果客户忘记处理可能异常，这里也会默认处理
        if(!closed){
            try{
                db.close();
            } catch(...) {
                //记录close的调用失败
            }
        }
    }
private:
    DBConnection db;
    bool closed;
};


//4 析构函数里面杜绝使用虚函数，道理同构造函数





